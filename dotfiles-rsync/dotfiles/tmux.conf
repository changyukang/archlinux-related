# 设置
set -g default-terminal "screen-256color"   #Terminal setting
#set -g display-time 3000                    #Time(ms) to show the message bar
set -g escape-time 200
set-window-option -g automatic-rename off   #disable window title auto-rename
set-option -g buffer-limit 16               #Number of copy buffers.
set -g history-limit 65535

# 设置Shell
set-option -g default-shell /bin/zsh

# a.设置默认键
unbind C-b  
set -g prefix C-a # change prefix key to Ctrl-a, same as gnu screen
bind a send-prefix #send ^a

#window navigation
bind -n 'F12' next
bind -n 'F11' prev

#水平或垂直分割窗口
#unbind '"'  
#bind - splitw -v # 分割成上下两个窗口  
#unbind %  
#bind | splitw -h # 分割成左右两个窗口

#选择分割的窗格
bind k selectp -U # 选择上窗格  
bind j selectp -D # 选择下窗格  
bind h selectp -L # 选择左窗格  
bind l selectp -R # 选择右窗格

#重新调整窗格的大小
bind ^k resizep -U 10 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）  
bind ^j resizep -D 10 # 同上  
bind ^h resizep -L 10 # ...  
bind ^l resizep -R 10 # ...

#交换两个窗格
bind ^u swapp -U # 与上窗格交换 Ctrl-u  
bind ^d swapp -D # 与下窗格交换 Ctrl-d

# e.设置默认键

#默认启动应用
new -s work_1 # 新建名为 work_1 的会话
#neww vim # 启动 vim  
#neww zsh  
#selectw -t 3 # 默认选择标号为 3 的窗口

#设置启动窗口默认名字
bind-key c new-window -n 'kcy-zsh'

#设置创建分屏时，目录为新建window或分屏前所处的目录
#bind - split-window -h -c "#{pane_current_path}"
#bind | split-window -v -c "#{pane_current_path}"
#bind-key c  new-window -c "#{pane_current_path}"


# a.Vim模式设置
# Use vim keybindings in copy mode 
set-window-option -g mode-keys vi
set -g status-keys vi

set-window-option -g utf8 on #开启UTF-8支持
#设置复制文本操作更像Vim，用v选择，用y复制,默认空格开始复制，Enter结束复制
# start selecting text typing 'v' key (once you are in copy mode) 
bind-key -t vi-copy v begin-selection 
# use y to paste
bind-key -t vi-copy y copy-selection
# Escape cancel
bind -t vi-copy Escape cancel

# Mac上需要，copy selected text to the system's clipboard 
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy")
# a.Vim模式设置

# a.鼠标设置
#set -g mode-mouse on
#setw -g mouse-select-window on
#setw -g mouse-select-pane on
#set -g mouse-resize-pane on
# e.鼠标设置

# a.定制状态栏
#-------[ Status Bar and colors ]----------------------------------------# {
set -g status-utf8 on
set -g status-bg black
set -g status-fg blue

set -g status-left "#[fg=colour250,bold,bg=colour235][#S]#[default]"

setw -g clock-mode-colour green
setw -g clock-mode-style 24
setw -g window-status-current-format '#[fg=black,bg=colour167]*#[bold,fg=black, bg=colour74] #I #W '
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour243,bg=colour237,bold]*#[fg=colour250,bg=colour240] #I #W "

set -g status-right-length 50
#cpu load
set -g status-right "#[fg=black,bg=colour72,bold]*#[fg=black,bg=colour109,bold]"
set -ga status-right " U:#(uptime|sed 's/.*:.//'|sed 's/,//g') "
#ram usage
set -ga status-right "#[fg=black,bg=colour72,bold]*#[fg=black,bg=colour109,bold]"
set -ga status-right " M:#(free|awk 'NR==2{printf \"%.2f\", 100*$3/$2}')% "
set -ga status-right "#[fg=black,bg=colour72,bold]*#[fg=black,bg=colour109,bold] %Y-%m-%d %H:%M#[default]"

set -g status-interval 5
set -g message-style "fg=black,bg=colour109,bold"
set -g message-command-style "fg=black,bg=colour109,bold"


#setw -g window-status-activity-bg colour23
#setw -g window-status-activity-fg colour239
set -g visual-activity on
setw -g monitor-activity on
#}

#设置tmux状态栏名字从1开始编号
#set -g base-indwx 1

#状态栏中间显示windos的名字
set -g status-justify centre
# e.定制状态栏

#-------[ Commands ]----------------------------------------# {

# open a panel for man page
bind m command-prompt "splitw -h 'exec man %%'"
bind '~' splitw htop
#reload config,bind a reload key,每当向 ~/.tmux.conf 文件中添加了新的配置，只需要按下 Ctrl-b r 就可以重新加载配置并使新的配置生效 
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
#}
# vim: fdm=marker foldmarker={,} 

